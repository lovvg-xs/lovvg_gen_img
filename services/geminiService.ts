import { GoogleGenAI } from "@google/genai";
import { ImageStyle, AspectRatio } from '../types';

export const generateImage = async (prompt: string, style: ImageStyle, aspectRatio: AspectRatio, apiKey: string): Promise<string> => {
  if (!apiKey) {
    throw new Error("API key is missing for this request.");
  }
  
  const ai = new GoogleGenAI({ apiKey });
  
  const stylePrefixes = {
      [ImageStyle.PIXEL]: "Pixel art style, 8-bit, retro, vibrant colors. ",
      [ImageStyle.STICK_FIGURE]: "Simple stick figure drawing, clean white background, black lines, minimalist. ",
      [ImageStyle.CARTOON]: "Vibrant cartoon style, bold outlines, cel-shaded. ", 
      [ImageStyle.REAL]: " with color clear blue ocean, 4k , hyper-realistic "// <-- Thêm dòng này
  };

  const stylePrefix = stylePrefixes[style];
  const fullPrompt = stylePrefix + prompt;
    

  try {
    const response = await ai.models.generateImages({
        model: 'imagen-3.0-generate-002',
        prompt: fullPrompt,
        config: {
          numberOfImages: 1,
          outputMimeType: 'image/jpeg',
          aspectRatio: aspectRatio,
        },
    });

    if (response.generatedImages && response.generatedImages.length > 0) {
      return response.generatedImages[0].image.imageBytes;
    } else {
      throw new Error("No image was generated by the API.");
    }
  } catch (error) {
    console.error("Gemini API Error:", error);
    if (error instanceof Error) {
        if (error.message.includes('API key not valid')) {
             throw new Error(`Invalid API Key. Please check your settings.`);
        }
        if (error.message.includes("accessible to billed users")) {
            throw new Error("Billing Required: The Imagen API needs a Google Cloud project with billing enabled. Please check your account settings.");
        }
        throw new Error(`Failed to generate image: ${error.message}`);
    }
    throw new Error("An unknown error occurred during image generation.");
  }
};